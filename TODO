Too much to list, but here's a list anyway:

* Sound
    More and better sound effects
    Music

* Engineering screen
    Damage reporting
    Damage repairing
    Coolant distribution(?)
    make comms power do something
    Some sliders set only a maximum, while others control power usage
	this is confusing.  Figure something out to make it less confusing.

* Communications screen
    Starbase comm stuff
    Enemy ship comm monitoring
    Friendly ship stuff
    bridge-to-bridge comm
    take damage into account

* Finish Navigation screen
  (various improvments.)
  take damage into account

* Finish weapons screen
  beam weapon
  take damage into account

* Science station
  take damage into account

* Setup screen
  Try to make it more intuitive for people who are seeing it for
  the first time ever.

* write some kind of guide to hacking, to make it easier for others to
  contribute to this codebase.

* computer-controlled-ships
  loads of AI improvements and basic functionality 
  remains to be done.

* starbase behavior
  improve docking with starbase

* anomalies, etc. need to be implemented

* 3D out the window view
  Fade distant objects to black
  Represent nebulas somehow
  finish conversion to opengl

* comms screen:
  need to be able to communicate with starbases -- request
  various things of the starbase. 
  intercept chatter between enemy ships
  ??? need to figure out what the hell the comms screen is good for.

* Damage control screen:
  Make the various components of the systems less generic
  and have damage distributed around to the components.
  Allow repairing/replacing of the components.  Am thinking
  replacing is better than repairing with some limited spares
  that must be refreshed at starbases.

* Need sound for wormhole travel
* I think the universe needs to be bigger, you can see too far out
  the main screen relative to the instruments, size of the universe.
  Or else maybe some kind of fog.
* How to represent nebulae on the main screen?
* joystick support for weapons and nav, and maybe others.
* allow mining of asteroids, asteroid mining bots or something
* trading of stuff mined from asteroids at stations.
* place stations more carefully relative to one another (not right next
  door to another station.)
* Need to be able to checkpoint-restart universe state on server side
* Think about allowing weapons to aim vertically and taking altitude
  into account for lasers and torpedoes.
* Right now, laser/torpedo collision detection is too easy/sloppy.
* Consider dead-reckoning laser/torpedo/ship positions client side between
  server updates.
* more lua event callbacks, some mission scripts done with lua
  basically, flesh out the lua scripting system.


* REAL 3D -- have full control of yaw/pitch/roll, be able to look and
  fly in any direction, etc.

* FIX THE COORDINATE SYSTEMS

Currently (Oct 22, 2013) we have several coordinate systems in the game,
several exist by accident without having been thought through.  This
needs fixing.

1.  The coordinate system the user sees (this is fine):

             0 degrees      +z
                      -y    ^
                       \    |
                        \   |
                         \  |
                          \ |
 180 degrees               \|
   -x <---------------------\------------------------> +x   90 degrees
                            |\                    \
                            | \  the universe      \
                            |  \                    \
                            |   \---------------------
                            |    \
                            v     +y
                           -z      270 degrees

2.  The coordinate system the game "thinks" in:
    This coordinate system is "left handed" (wrong)
    and does not match what opengl wants.

             270 degrees      +z
                      -y    ^
                       \    |
                        \   |
                         \  |
                          \ |
 180 degrees               \|
   -x <---------------------\------------------------> +x   0 degrees
                            |\
                            | \
                            |  \
                            |   \
                            |    \
                            v     +y
                           -z      90 degrees


3.  The coordinate system the software renderer uses:

                ??? degrees -y
                      +z    ^
                       \    |
                        \   |
                         \  |
                          \ |
 ??? degrees               \|
   -x <---------------------\------------------------> +x  ??? degrees
                            |\
                            | \
                            |  \
                            |   \
                            |    \
                            v     -z
                           +y    ??? degrees

4.  The coordinate system OpenGL uses 

                ??? degrees -y
                      -z    ^
                       \    |
                        \   |
                         \  |
                          \ |
 ??? degrees               \|
   -x <---------------------\------------------------> +x  ??? degrees
                            |\
                            | \
                            |  \
                            |   \
                            |    \
                            v     +z
                           +y    ??? degrees

There is no reason for #2 and #3 to be different than #4, so those
differences must be eliminated.



NICE TO HAVE:

* Make the universe more realistic in a variety of ways (but not too realistic,
  i.e. if the ship is the nominal size of The Enterprise, then Saturn would be
  bigger than the current known in-game universe -- obviously that is too much
  realism.   Also, have planets orbiting stars, stations orbiting planets, etc,
  instead of what we have now, which is just stuff randomly sprinkled around.


